{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/Proxies/Entities/LoginCredentialsDto.ts","webpack:///./src/Proxies/Services/Account.service.ts","webpack:///./src/Proxies/Services/Test.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login.component.html","webpack:///./src/app/login.component.ts","webpack:///./src/app/main.layout.component.html","webpack:///./src/app/main.layout.component.ts","webpack:///./src/app/overview.component.html","webpack:///./src/app/overview.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/services/authGuardService.ts","webpack:///./src/shared/services/authService.ts","webpack:///./src/shared/token.interceptor.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";"," // Generated item\r\n    export class LoginCredentialsDto {\r\n        \r\n        public username: string;\r\n        public password: string;\r\n        \r\n    }  \r\n\r\n","﻿\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http'; \r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PersonDto } from '../Entities/PersonDto';import { LoginCredentialsDto } from '../Entities/LoginCredentialsDto';\r\n@Injectable()\r\nexport class AccountController {\r\n    constructor(private _httpClient: HttpClient) { }        \r\n    \r\n    // get: /api/account/getAccount      \r\n    get(): Observable<PersonDto> {\r\n        var _Url = `/api/account/getAccount`;\r\n            return this._httpClient.get<PersonDto>(_Url);\r\n    }\r\n    \r\n    // post: /api/account?userName=${encodeURIComponent(userName)}      \r\n    create(userName: string): Observable<void> {\r\n        var _Url = `/api/account?userName=${encodeURIComponent(userName)}`;\r\n            return this._httpClient.post<void>(_Url,userName);\r\n    }\r\n    \r\n    // post: /api/account/login      \r\n    login(credentials: LoginCredentialsDto): Observable<void> {\r\n        var _Url = `/api/account/login`;\r\n            return this._httpClient.post<void>(_Url,credentials);\r\n    }\r\n    \r\n}\r\n","﻿\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http'; \r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PersonDto } from '../Entities/PersonDto';\r\n@Injectable()\r\nexport class TestController {\r\n    constructor(private _httpClient: HttpClient) { }        \r\n    \r\n    // get: /api/values      \r\n    get(): Observable<PersonDto[]> {\r\n        var _Url = `/api/values`;\r\n            return this._httpClient.get<PersonDto[]>(_Url);\r\n    }\r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\r\nimport { OverviewComponent } from './overview.component';\r\nimport { AuthGuardService as AuthGuard } from '../shared/services/authGuardService';\r\nimport { MainLayoutComponent } from './main.layout.component';\r\n\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    component: MainLayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: OverviewComponent, pathMatch: 'full' },\r\n      { path: 'friends', component: OverviewComponent, pathMatch: 'full' },\r\n      { path: 'messages', component: OverviewComponent, pathMatch: 'full' }\r\n    ]\r\n  },\r\n\r\n  //no layout routes\r\n  {\r\n    path: 'account/login',\r\n    component: LoginComponent\r\n  },\r\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\r\nimport { TestController } from '../Proxies/Services/Test.service';\r\nimport { PersonDto } from '../Proxies/Entities/PersonDto';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private _testService: TestController\n  ) { }\n\n  ngOnInit() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TestController } from '../Proxies/Services/Test.service';\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { OverviewComponent } from './overview.component';\r\nimport { AuthGuardService } from '../shared/services/authGuardService';\r\nimport { AuthService } from '../shared/services/authService';\r\nimport { JwtHelperService } from '@auth0/angular-jwt/src/jwthelper.service';\r\nimport { TokenInterceptor } from '../shared/token.interceptor';\r\nimport { MainLayoutComponent } from './main.layout.component';\r\nimport { AccountController } from '../Proxies/Services/Account.service';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    OverviewComponent,\n    MainLayoutComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      FormsModule,\n      ReactiveFormsModule\n  ],\n  providers: [\n    TestController,\n    AccountController,\n    AuthGuardService,\n    AuthService,\n    JwtHelperService,\n    {\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"ui stackable three column grid \\\" style=\\\"height:100%;\\\">\\r\\n  <div class=\\\"column\\\"></div>\\r\\n  <div class=\\\"ui column middle aligned segment\\\">\\r\\n    <form class=\\\"ui form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Gebruikersnaam</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Gebruikersnaam\\\">\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Wachtwoord</label>\\r\\n        <input type=\\\"password\\\"  class=\\\"form-control\\\"  name=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Wachtwoord\\\">\\r\\n      </div>\\r\\n      <p class=\\\"ui red\\\" *ngIf=\\\"error\\\" style=\\\"color:red;\\\">{{error}}</p>\\r\\n      <button class=\\\"ui button right floated\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Inloggen</button>\\r\\n    </form>\\r\\n    <a (click)=\\\"createAccount()\\\">Maak account</a>\\r\\n  </div>\\r\\n  <div class=\\\"column\\\"></div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\r\nimport { PersonDto } from '../Proxies/Entities/PersonDto';\r\nimport { LoginCredentialsDto } from '../Proxies/Entities/LoginCredentialsDto';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../shared/services/authService';\r\nimport { AccountController } from '../Proxies/Services/Account.service';\r\n\n@Component({\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error: string;\n\n  constructor(\n    private _accountService: AccountController,\n    public router: Router,\n    public auth: AuthService\n  ) { }\n\n  ngOnInit() {\r\n    if (this.auth.isAuthenticated)\r\n    {\r\n      this.router.navigate(['/']);\r\n    }\r\n\r\n    this.loginForm = new FormGroup(\r\n      {\r\n        username: new FormControl(\"\", Validators.required),\r\n        password: new FormControl(\"\", Validators.required),\r\n      });\r\n  }\n\n  login() {\n    let credentials = new LoginCredentialsDto();\n    credentials.username = this.loginForm.controls['username'].value;\n    credentials.password = this.loginForm.controls['password'].value;\n\n    this._accountService.login(credentials).subscribe(result => {\r\n      this.error = null;\r\n      localStorage.setItem('token', result[\"token\"]);\r\n      this.router.navigate(['']);\r\n    }, error => {\r\n      console.log(error);\r\n      this.error = error.error;\r\n    });\r\n  }\n\n  createAccount() {\n    this._accountService.create(\"Frank\").subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\n}\n","module.exports = \"<div class=\\\"ui secondary pointing menu\\\">\\r\\n  <a routerLink=\\\"\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\" routerLinkActive=\\\"active\\\" class=\\\"item\\\">\\r\\n    Home\\r\\n  </a>\\r\\n  <div class=\\\"right menu\\\">\\r\\n    <a class=\\\"ui item\\\" (click)=\\\"logout()\\\">\\r\\n      Uitloggen\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { AccountController } from '../Proxies/Services/Account.service';\r\n\n@Component({\n  templateUrl: './main.layout.component.html',\n  selector:'main-layout'\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor(private _accountService: AccountController, ) { }\n\n  ngOnInit() {\r\n    this._accountService.get().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\n\n  logout() {\n    localStorage.removeItem('token');\r\n    window.location.reload();\r\n  }\n}\n","module.exports = \"<h1>Achievement gest!</h1>\\r\\n<button class=\\\"ui positive button active\\\" (click)=\\\"getValues()\\\">Get Values</button>\\r\\n<div *ngFor=\\\"let value of values\\\">\\r\\n  <p>{{value.name}}</p>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\r\nimport { TestController } from 'src/Proxies/Services/Test.service';\r\nimport { PersonDto } from '../Proxies/Entities/PersonDto';\r\n\n@Component({\n  templateUrl: './overview.component.html',\n})\nexport class OverviewComponent implements OnInit {\n\n  private values: PersonDto[];\n\n  constructor(\n   private _testService: TestController\n  ) { }\n\n  ngOnInit() {\n    console.log(\"overview\");\r\n  }\n\n  getValues() {\n    this._testService.get().subscribe(result => {\r\n      this.values = result;\r\n    })\r\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './authService';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['account/login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n@Injectable()\r\nexport class AuthService {\r\n  jwtHelper: JwtHelperService;\r\n  constructor() {\r\n    this.jwtHelper = new JwtHelperService();\r\n  }\r\n  // ...\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    // Check whether the token is expired and return\r\n    // true or false\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}\r\n"],"sourceRoot":""}