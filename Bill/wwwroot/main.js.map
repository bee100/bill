{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/Proxies/Entities/testDto.ts","webpack:///./src/Proxies/Services/Test.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;ACZE;AAAA,iBAAiB;AACf;IACI,iBAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAC/B,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFL,kEAAkE;AAClE,EAAE;AACF,4FAA4F;AAC5F,mGAAmG;AACnG,EAAE;AACF,kEAAkE;AACvB;AACM;AAKjD;IACI,wBAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAEhD,yBAAyB;IACzB,4BAAG,GAAH;QACI,IAAI,IAAI,GAAG,aAAa,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAW,IAAI,CAAC,CAAC;IACpD,CAAC;IAPQ,cAAc;QAD1B,gEAAU,EAAE;yCAEwB,+DAAU;OADlC,cAAc,CAS1B;IAAD,qBAAC;CAAA;AAT0B;;;;;;;;;;;;ACd3B,mB;;;;;;;;;;;ACAA,iGAAiG,OAAO,kJAAkJ,WAAW,K;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3N;AAEY;AACY;AAOlE;IAKE,sBACU,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;QAJtC,cAAS,GAAa,EAAE,CAAC;QACzB,SAAI,GAAY,IAAI,iEAAO,CAAC,SAAS,CAAC,CAAC;IAInC,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAKG;QAJD,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAdQ,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAOwB,6EAAc;OAN3B,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACe;AAET;AACmB;AAelE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,qEAAgB;aACnB;YACD,SAAS,EAAE;gBACT,6EAAc;aACf;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACpBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","ï»¿ // Generated item\r\n    export class TestDto {  \r\n        constructor(public name: string) {  \r\n        }  \r\n    }  \r\n\r\n","\r\n\r\n//*************************DO NOT MODIFY**************************\r\n//\r\n//THESE FILES ARE AUTOGENERATED WITH TYPEWRITER AND ANY MODIFICATIONS MADE HERE WILL BE LOST\r\n//PLEASE VISIT http://frhagn.github.io/Typewriter/ TO LEARN MORE ABOUT THIS VISUAL STUDIO EXTENSION\r\n//\r\n//*************************DO NOT MODIFY**************************\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http'; \r\nimport { Observable } from 'rxjs';\r\n\r\nimport {  } from '../classes/';\r\n@Injectable()\r\nexport class TestController {\r\n    constructor(private _httpClient: HttpClient) { }        \r\n    \r\n    // get: /api/values      \r\n    get(): Observable<string[]> {\r\n        var _Url = `/api/values`;\r\n            return this._httpClient.get<string[]>(_Url);\r\n    }\r\n    \r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Angular test</h1>\\r\\n\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let value of apiValues\\\">{{value}}</li>\\r\\n</ul>\\r\\n<button class=\\\"ui primary button\\\">\\r\\n  Save\\r\\n</button>\\r\\n<button class=\\\"ui button\\\">\\r\\n  Discardc\\r\\n</button>\\r\\n\\r\\n{{test.name}}\\r\\n\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\r\nimport { TestDto } from '../Proxies/Entities/testDto';\r\nimport { TestController } from '../Proxies/Services/Test.service';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  apiValues: string[] = [];\n  test: TestDto = new TestDto(\"Loading\");\n\n  constructor(\n    private _testService: TestController\n  ) { }\n\n  ngOnInit() {\n    this._testService.get().subscribe(result => {\r\n      this.apiValues = result;\r\n      this.apiValues.push(\"angulaar\");\r\n      })\r\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { AppComponent } from './app.component';\nimport { TestController } from '../Proxies/Services/Test.service';\r\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n  providers: [\n    TestController\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}